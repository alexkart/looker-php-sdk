<?php
/**
 * LookmlModelExploreTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Looker API 4.0 Reference
 *
 * API 4.0 is the current release of the Looker API. API 3.1 is deprecated.  ### Authorization  The classic method of API authorization uses Looker **API3** credentials for authorization and access control. Looker admins can create API3 credentials on Looker's **Admin/Users** page.  API 4.0 adds additional ways to authenticate API requests, including OAuth and CORS requests.  For details, see [Looker API Authorization](https://cloud.google.com/looker/docs/r/api/authorization).   ### API Explorer  The API Explorer is a Looker-provided utility with many new and unique features for learning and using the Looker API and SDKs.  For details, see the [API Explorer documentation](https://cloud.google.com/looker/docs/r/api/explorer).   ### Looker Language SDKs  The Looker API is a RESTful system that should be usable by any programming language capable of making HTTPS requests. SDKs for a variety of programming languages are also provided to streamline using the API. Looker has an OpenSource [sdk-codegen project](https://github.com/looker-open-source/sdk-codegen) that provides several language SDKs. Language SDKs generated by `sdk-codegen` have an Authentication manager that can automatically authenticate API requests when needed.  For details on available Looker SDKs, see [Looker API Client SDKs](https://cloud.google.com/looker/docs/r/api/client_sdks).   ### API Versioning  Future releases of Looker expand the latest API version release-by-release to securely expose more and more of the core power of the Looker platform to API client applications. API endpoints marked as \"beta\" may receive breaking changes without warning (but we will try to avoid doing that). Stable (non-beta) API endpoints should not receive breaking changes in future releases.  For details, see [Looker API Versioning](https://cloud.google.com/looker/docs/r/api/versioning).   ### In This Release  API 4.0 version was introduced to make adjustments to API functions, parameters, and response types to fix bugs and inconsistencies. These changes fall outside the bounds of non-breaking additive changes we can make to the previous API 3.1.  One benefit of these type adjustments in API 4.0 is dramatically better support for strongly typed languages like TypeScript, Kotlin, Swift, Go, C#, and more.  See the [API 4.0 GA announcement](https://developers.looker.com/api/advanced-usage/version-4-ga) for more information about API 4.0.  The API Explorer can be used to [interactively compare](https://cloud.google.com/looker/docs/r/api/explorer#comparing_api_versions) the differences between API 3.1 and 4.0.   ### API and SDK Support Policies  Looker API versions and language SDKs have varying support levels. Please read the API and SDK [support policies](https://cloud.google.com/looker/docs/r/api/support-policy) for more information.
 *
 * OpenAPI spec version: 4.0.23.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.32
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace Swagger\Client;

/**
 * LookmlModelExploreTest Class Doc Comment
 *
 * @category    Class
 * @description LookmlModelExplore
 * @package     Swagger\Client
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class LookmlModelExploreTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "LookmlModelExplore"
     */
    public function testLookmlModelExplore()
    {
    }

    /**
     * Test attribute "id"
     */
    public function testPropertyId()
    {
    }

    /**
     * Test attribute "name"
     */
    public function testPropertyName()
    {
    }

    /**
     * Test attribute "description"
     */
    public function testPropertyDescription()
    {
    }

    /**
     * Test attribute "label"
     */
    public function testPropertyLabel()
    {
    }

    /**
     * Test attribute "title"
     */
    public function testPropertyTitle()
    {
    }

    /**
     * Test attribute "scopes"
     */
    public function testPropertyScopes()
    {
    }

    /**
     * Test attribute "can_total"
     */
    public function testPropertyCanTotal()
    {
    }

    /**
     * Test attribute "can_develop"
     */
    public function testPropertyCanDevelop()
    {
    }

    /**
     * Test attribute "can_see_lookml"
     */
    public function testPropertyCanSeeLookml()
    {
    }

    /**
     * Test attribute "lookml_link"
     */
    public function testPropertyLookmlLink()
    {
    }

    /**
     * Test attribute "can_save"
     */
    public function testPropertyCanSave()
    {
    }

    /**
     * Test attribute "can_explain"
     */
    public function testPropertyCanExplain()
    {
    }

    /**
     * Test attribute "can_pivot_in_db"
     */
    public function testPropertyCanPivotInDb()
    {
    }

    /**
     * Test attribute "can_subtotal"
     */
    public function testPropertyCanSubtotal()
    {
    }

    /**
     * Test attribute "has_timezone_support"
     */
    public function testPropertyHasTimezoneSupport()
    {
    }

    /**
     * Test attribute "supports_cost_estimate"
     */
    public function testPropertySupportsCostEstimate()
    {
    }

    /**
     * Test attribute "connection_name"
     */
    public function testPropertyConnectionName()
    {
    }

    /**
     * Test attribute "null_sort_treatment"
     */
    public function testPropertyNullSortTreatment()
    {
    }

    /**
     * Test attribute "files"
     */
    public function testPropertyFiles()
    {
    }

    /**
     * Test attribute "source_file"
     */
    public function testPropertySourceFile()
    {
    }

    /**
     * Test attribute "project_name"
     */
    public function testPropertyProjectName()
    {
    }

    /**
     * Test attribute "model_name"
     */
    public function testPropertyModelName()
    {
    }

    /**
     * Test attribute "view_name"
     */
    public function testPropertyViewName()
    {
    }

    /**
     * Test attribute "hidden"
     */
    public function testPropertyHidden()
    {
    }

    /**
     * Test attribute "sql_table_name"
     */
    public function testPropertySqlTableName()
    {
    }

    /**
     * Test attribute "access_filter_fields"
     */
    public function testPropertyAccessFilterFields()
    {
    }

    /**
     * Test attribute "access_filters"
     */
    public function testPropertyAccessFilters()
    {
    }

    /**
     * Test attribute "aliases"
     */
    public function testPropertyAliases()
    {
    }

    /**
     * Test attribute "always_filter"
     */
    public function testPropertyAlwaysFilter()
    {
    }

    /**
     * Test attribute "conditionally_filter"
     */
    public function testPropertyConditionallyFilter()
    {
    }

    /**
     * Test attribute "index_fields"
     */
    public function testPropertyIndexFields()
    {
    }

    /**
     * Test attribute "sets"
     */
    public function testPropertySets()
    {
    }

    /**
     * Test attribute "tags"
     */
    public function testPropertyTags()
    {
    }

    /**
     * Test attribute "errors"
     */
    public function testPropertyErrors()
    {
    }

    /**
     * Test attribute "fields"
     */
    public function testPropertyFields()
    {
    }

    /**
     * Test attribute "joins"
     */
    public function testPropertyJoins()
    {
    }

    /**
     * Test attribute "group_label"
     */
    public function testPropertyGroupLabel()
    {
    }

    /**
     * Test attribute "supported_measure_types"
     */
    public function testPropertySupportedMeasureTypes()
    {
    }

    /**
     * Test attribute "always_join"
     */
    public function testPropertyAlwaysJoin()
    {
    }
}
